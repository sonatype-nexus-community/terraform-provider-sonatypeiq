# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
    pull_request:
        paths-ignore:
            - 'README.md'
    push:
        paths-ignore:
            - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
    contents: read

jobs:
    # Ensure project builds before running testing matrix
    build:
        name: Build
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true
            - run: go mod download
            - run: go build -v .
            - name: Run linters
              uses: golangci/golangci-lint-action@v7
              with:
                version: v2.0

    generate:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true
            # We need the latest version of Terraform for our documentation generation to use
            - uses: hashicorp/setup-terraform@v3
              with:
                terraform_wrapper: false
            - run: go get github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs
            - name: Run Generation
              run: go generate ./...
              working-directory: tools
            - name: Check for diff
              run: |
                  git diff --compact-summary --exit-code || \
                    (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

    # Run acceptance tests in a matrix with Terraform CLI versions
    test:
        name: Terraform Provider Acceptance Tests
        needs: build
        runs-on: ubuntu-latest
        timeout-minutes: 15
        strategy:
            fail-fast: false
            matrix:
                # list whatever Terraform versions here you would like to support
                terraform:
                    - '1.0.*'
                    - '1.1.*'
                    - '1.2.*'
                    - '1.3.*'
                    - '1.4.*'
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true
            - uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: ${{ matrix.terraform }}
                  terraform_wrapper: false
            - run: go mod download
            - env:
                  IQ_SERVER_URL: ${{ secrets.IQ_SERVER_URL }}
                  IQ_SERVER_USERNAME: ${{ secrets.IQ_SERVER_USERNAME }}
                  IQ_SERVER_PASSWORD: ${{ secrets.IQ_SERVER_PASSWORD }}
                  TF_ACC: '1'
              run: go test -v -cover ./internal/provider/
              timeout-minutes: 10
